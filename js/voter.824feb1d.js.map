{"version":3,"sources":["webpack:///./src/misc/Voter.ts"],"names":["Voter","Promise","resolve","onAuthStateChanged","itemId","user","this","getUser","uid","getDoc","get","doc","getRecordId","value","decrement","firestore","FieldValue","increment","set","likes","merge","record","getRecord","exists","delete","incrementVote","picId","userId"],"mappings":"uGAAA,uBAGA,MAAMA,EACI,gBACN,OAAO,IAAIC,QAASC,IAClB,OAAKC,mBAAmBD,KAIpB,kBAAkBE,GACxB,MAAMC,QAAaC,KAAKC,UAExB,MAAO,GAAGF,EAAMG,OAAOJ,IAGjB,gBAAgBA,GACtB,aAAcE,KAAKG,OAAOL,IAASM,MAG7B,aAAaN,GACnB,OAAO,OAAgBO,UAAUL,KAAKM,YAAYR,IAG5C,oBAAoBA,EAAgBS,EAAQ,GAClD,MAAMC,EAAY,OAASC,UAAUC,WAAWC,UAAUJ,GAC1D,OAAO,OAAcF,IAAIP,GAAQc,IAAI,CAAEC,MAAOL,GAAa,CAAEM,OAAO,IAG/D,oBAAoBhB,GACzB,MAAMiB,QAAef,KAAKgB,UAAUlB,GACpC,OAAOiB,EAAOE,OAGT,aAAanB,GAClB,MAAMO,QAAYL,KAAKG,OAAOL,GACxBiB,QAAeV,EAAID,MACzB,GAAIW,EAAOE,OACTZ,EAAIa,SACJlB,KAAKmB,cAAcrB,GAAS,OACvB,CACL,MAAMC,QAAaC,KAAKC,UACxBI,EAAIO,IAAI,CACNQ,MAAOtB,EAEPuB,OAAQtB,EAAMG,MAEhBF,KAAKmB,cAAcrB,EAAQ,GAG7B,OAAQiB,EAAOE,QAIJ,iBAAIvB","file":"js/voter.824feb1d.js","sourcesContent":["import { auth, likesCollection, firebase, picCollection } from '@/firebase';\nimport { User } from 'firebase';\n\nclass Voter {\n  private async getUser(): Promise<User | null> {\n    return new Promise((resolve) => {\n      auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  private async getRecordId(itemId: string) {\n    const user = await this.getUser();\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return `${user!.uid}_${itemId}`;\n  }\n\n  private async getRecord(itemId: string) {\n    return (await this.getDoc(itemId)).get();\n  }\n\n  private async getDoc(itemId: string) {\n    return likesCollection.doc(await this.getRecordId(itemId));\n  }\n\n  private async incrementVote(itemId: string, value = 1) {\n    const decrement = firebase.firestore.FieldValue.increment(value);\n    return picCollection.doc(itemId).set({ likes: decrement }, { merge: true });\n  }\n\n  public async getVoteStatus(itemId: string) {\n    const record = await this.getRecord(itemId);\n    return record.exists;\n  }\n\n  public async toggle(itemId: string) {\n    const doc = await this.getDoc(itemId);\n    const record = await doc.get();\n    if (record.exists) {\n      doc.delete();\n      this.incrementVote(itemId, -1);\n    } else {\n      const user = await this.getUser();\n      doc.set({\n        picId: itemId,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        userId: user!.uid,\n      });\n      this.incrementVote(itemId, 1);\n    }\n\n    return !record.exists;\n  }\n}\n\nexport default new Voter();\n"],"sourceRoot":""}